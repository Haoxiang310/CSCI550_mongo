# This passthrough runs all concurrency_replication and automatically batches multi-deletes.
test_kind: fsm_workload_test

selector:
  roots:
  - jstests/concurrency/fsm_workloads/**/*.js
  exclude_files:
  ##
  # Disabled due to MongoDB restrictions and/or workload restrictions
  ##
  # These workloads use >100MB of data, which can overwhelm test hosts.
  - jstests/concurrency/fsm_workloads/agg_group_external.js
  - jstests/concurrency/fsm_workloads/agg_sort_external.js

  # The findAndModify_update_grow.js workload can cause OOM kills on test hosts.
  - jstests/concurrency/fsm_workloads/findAndModify_update_grow.js

  # These workloads run the reIndex command, which is only allowed on a standalone node.
  - jstests/concurrency/fsm_workloads/reindex.js
  - jstests/concurrency/fsm_workloads/reindex_background.js
  - jstests/concurrency/fsm_workloads/reindex_writeconflict.js

  # TODO (SERVER-64506): these tests use transactions under the hood to modify user roles.
  - jstests/concurrency/fsm_workloads/auth_*.js

  exclude_with_any_tags:
  - assumes_standalone_mongod
  - requires_sharding
  # TODO (SERVER-64506): make groupOplogEntries WUOW's nestable (e.g. inside multi-doc txns).
  - uses_prepare_transaction
  - uses_transactions

executor:
  archive:
    hooks:
      - CheckReplDBHash
      - ValidateCollections
    tests: true
  config: {}
  hooks:
  # The CheckReplDBHash hook waits until all operations have replicated to and have been applied
  # on the secondaries, so we run the ValidateCollections hook after it to ensure we're
  # validating the entire contents of the collection.
  #
  # TODO SERVER-26466: Add CheckReplOplogs hook to the concurrency suite.
  - class: CheckReplDBHash
  - class: ValidateCollections
  - class: CleanupConcurrencyWorkloads
  fixture:
    class: ReplicaSetFixture
    mongod_options:
      oplogSize: 1024
      set_parameters:
        enableTestCommands: 1
        roleGraphInvalidationIsFatal: 1
        failpoint.batchDeletesByDefault: "{mode: 'alwaysOn'}"
    num_nodes: 3
