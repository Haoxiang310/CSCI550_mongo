# Copyright (C) 2021-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

# _configsvrCommitChunksMerge IDL File

global:
    cpp_namespace: "mongo"
    cpp_includes:
        - "mongo/s/request_types/merge_chunk_request_valid.h"
        - "mongo/util/uuid.h"
    
imports:
    - "mongo/idl/basic_types.idl"
    - "mongo/s/chunk_range.idl"
    - "mongo/s/chunk_version.idl"
    - "mongo/s/sharding_types.idl"

types:
    # Non-IDL response used UUIDtoBSON instead of UUID::toCDR
    my_uuid:
        bson_serialization_type: object
        description: "A UUID for some reason not generic uuid type."
        cpp_type: UUID
        deserializer: UUID::parse
        serializer: UUID::toBSON

structs:
    ConfigSvrMergeResponse:
        description: "Response of the _configsvrCommitChunksMerge command."
        strict: false
        fields:
            shardVersion:
                type: ChunkVersion
                description: "Latest version of the shard."

commands:
    _configsvrCommitChunksMerge:
        command_name: _configsvrCommitChunksMerge
        cpp_name: ConfigSvrMergeChunks
        description: "The internal _configsvrCommitChunksMerge command on the config server."
        namespace: type
        api_version: ""
        type: namespacestring
        strict: false
        reply_type: ConfigSvrMergeResponse
        fields:
            shard:
                description: "The id of the shard."
                type: shard_id
            collUUID:
                type: my_uuid
                cpp_name: "collectionUUID"
                description: "The UUID of the collection that the chunk belongs to."
            chunkRange:
                type: chunk_range
                cpp_name: "chunkRange"
                description: "Chunk bounds to merge."
            validAfter:
                type: timestamp
                description: "The time after which this chunk is at this shard."
                optional: true
            epoch:
                description: "The expected epoch of the collection that is being committed"
                type: objectid
                optional: true
            timestamp:
                description: "The expected timestamp of the collection that is being committed"
                type: timestamp
                optional: true
